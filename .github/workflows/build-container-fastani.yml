# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# https://docs.github.com/en/actions/guides/publishing-docker-images
# https://github.com/docker/build-push-action/blob/master/docs/advanced/share-image-jobs.md
name: build-fastani
on: [push]


env:      
  CONTAINER_NAME: fastani
  VERSION: "1.33"
  # The inspect command will be run inside the container
  # with `docker run` and should have an exit code of 0
  # or an exit code > 0 if the container is somehow bad.
  INSPECT_CMD: "fastANI -h"

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: literally the command env
        run:  env
      - name: env
        run:  |
          tree -L 2 -d
          pwd -P
          ls -lhS
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name : Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export
        id:   docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: ${{ env.CONTAINER_NAME }}:${{ env.VERSION }}
          context: ${{ env.CONTAINER_NAME }}/${{ env.VERSION }}
          outputs: type=docker,dest=/tmp/${{ env.CONTAINER_NAME }}.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.CONTAINER_NAME }}
          path: /tmp/${{ env.CONTAINER_NAME }}.tar

  check-the-build:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - name: directory contents (1)
        run:  |
          pwd -P
          ls -lhA
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.CONTAINER_NAME }}
          #path: /tmp/${{ env.CONTAINER_NAME }}.tar
      - name: directory contents (2)
        run:  |
          pwd -P
          ls -lhAR
      - name: basic docker checks
        run:  |
          docker load --input ./${{ env.CONTAINER_NAME }}.tar
          docker image ls -a
          docker ps --no-trunc --all
      - name: Test the specific container ${{ env.CONTAINER_NAME }}:${{ env.VERSION }}
        run:  |
          docker run ${{ env.CONTAINER_NAME }}:${{ env.VERSION }} ls -lh /
          docker run ${{ env.CONTAINER_NAME }}:${{ env.VERSION }} ${{ env.INSPECT_CMD }}



